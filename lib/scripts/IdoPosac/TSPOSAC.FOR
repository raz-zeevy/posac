
      SUBROUTINE POSAC

INCLUDE 'MPARMLIN'

      PARAMETER (LENIFOR=255)
C
C  THIS SUB. CONTROLS THE ITERATIONS OF ALL
C  THE PROCESS IN ORDER TO GET THE 2-DIMENSIONAL
C  CONFIGURATION OF THE PROFILES
C
C     COMMON X(1)

INCLUDE 'MCOMNBLK'

      COMMON/ZEROES/ZERO,ZEROMU2
      COMMON/IO/NTAPE,NREAD,NWRITE,NSCR
      COMMON/AA/NV,NCAS,NXT,MAP,M
      COMMON/CC/ISMN,ISMX,IEND
C      COMMON/DIM/M,N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N11,N12
      COMMON/BB/IFOR
      COMMON/SBPOSA/INITX,FND1,FND2
      COMMON/NIT/ITRM
C
      CHARACTER IFOR*(LENIFOR)
CY      INTEGER*2 IHOUR, IMINUTE, ISECOND, IHUNDREDSECOND
      REAL XNMAX, XMUTMX
      INTEGER*2 NV,NCAS,NXT,MAP,M,ISMN,ISMX,IEND
C
C **********************************************************************
C
      CALL ALF(XN7,XN44,NV,IEND)
      WRITE (NWRITE,200) FND1,FND2
C
      CALL BETA(XN5,XN7,XN7,IEND,FND1,FND2)
C
      IF (INITX .EQ. 0) THEN
C
          WRITE (NWRITE,300)
C
          CALL INIT(XN8,XN9,XN44,XN3,XN5,XX1,NV,IEND)
C
      ELSE
C
          READ (NREAD,'(A)') IFOR
          WRITE (NWRITE,500)
C
          CALL ENTER(XN8,IEND,M)
C
          CALL TRANS2(XN8,IEND,M)
C
          CALL BOUND(XN9,IEND,M)
C
      ENDIF
C
      XNMAX = 0.0
      ITOT=0
C  IREGUL IS THE MAX NUMBER OF ITERATIONS BEFORE TRANS3
      IREGUL=10
      ITR=1
      XMUST=1.E+38
      IT=1
   10 CONTINUE
C  FUNCTION CTIM$A(DUMMY)
C  CPU TIME ELAPSED SINCE 'LOGIN' IS RETURNED
C   IN SECONDS
C  THIS FUNCTION IS A ROUTINE FROM THE PRIME
C  COMPUTER . IF YOU HAVE NO SUCH A FUNCTION
C  IN YOUR COMPUTER , LOOK FOR AN EQUIVALENT ONE
C  OR INSERT A DUMMY FUNCTION 'CTIM$A'
CY      CALL GETTIM(IHOUR,IMINUTE,ISECOND,IHUNDREDSECOND)
CY      TIME=IHOUR*3600.0+ (IMINUTE*60+ISECOND) +IHUNDREDSECOND/100.
      CALL CPU_TIME(TIME)
C
      CALL ITER
      ITOT=ITOT+1
C
      CALL STORE(XN8,XN9,IEND,M)
C
      CALL TRANS3(XN9,XN6,IEND,M)
C
      CALL UVMU(XN7,XN7,XN9,XN3,IEND,UT,VT,XMX2)
C
      IF(IT.EQ.1) THEN
          CALL STORE(XN11,XN9,IEND,M)
          XMUT=UT/VT
      END IF
C
CY      CALL GETTIM(IHOUR,IMINUTE,ISECOND,IHUNDREDSECOND)
CY      DTIME=IHOUR*3600.0+ (IMINUTE*60+ISECOND) +IHUNDREDSECOND/100.-TIME
      CALL CPU_TIME(DTIME)
      DTIME = DTIME-TIME
C
      CALL NORMU(XN7,XN9,XN3,IEND,UN,VN,XN)
C
      IF (XN .GT. XNMAX) THEN
C
C              Save best solution so far in XN12
C
          XNMAX = XN
          CALL STORE(XN12,XN9,IEND,M)
          XMUTMX = XMUT
      END IF
C
      PRINT 600,ITOT,DTIME,XN,XMUT
C
      IF(ABS(XMX2-XMUST).LT.1.E-15) GO TO 40
      IF(ABS(XMX2).LT.ZERO) GO TO 20
      IF(ITOT.GE.ITRM) GO TO 20
      IF(XMX2.LT.XMUST) GO TO 30
      IF(IT.GE.IREGUL) GO TO 40
      IT=IT+1
      GO TO 10
   30 CONTINUE
C
C      WRITE (NWRITE, *) ' SPOSAC  LABEL 30'
C
C      uses output of TRANS3
C
      CALL STORE(XN8,XN9,IEND,M)
      XMUST=XMX2
C
      IT=1
      IF(ITOT.GE.ITRM) GO TO 20
      ITR=ITR+1
      GO TO 10
   40 CONTINUE
C
C      WRITE (NWRITE, *) ' SPOSAC  LABEL 40', IT, ITREGUL,
C     $                  ABS (XMX2 - XMUST)
C
      CALL STORE(XN9,XN11,IEND,M)
   20 CONTINUE
C
C      WRITE (NWRITE, *) ' SPOSAC  LABEL 20', ITOT, ITRM, XMX2
C
      CALL NORMU(XN7,XN9,XN3,IEND,UN,VN,XN)
C
      IF (XNMAX .GT. XN) THEN
C
C              Retrieve best solution from XN12
C
          XN = XNMAX
          XMUT = XMUTMX
          CALL STORE(XN9,XN12,IEND,M)
          WRITE (*,700)
          WRITE (NWRITE, 700)
      END IF
C
      WRITE (NWRITE,600) ITOT,DTIME,XN,XMUT
C
      CALL ENLA(XN9,100.,IEND,M)
C
      CALL PRNT(XN3,XN44,XN5,XN9,NV,IEND)
C  MONOTONICITY COEFFICIENTS ....
C
      CALL MUVRXY(XN3,XN44,XN9,XN10,XN11,NV,IEND)
C
      CALL PLOTS
C  SAVING RESULTS ON UNIT NSCR FOR
C  PROGRAMS LSA1,LSA2
C**********
C
      CALL WRT(XN3,XN44,XN5,XN9,XN20,NV,IEND)
C
C**********
C
      CALL ENLA(XN9,.01,IEND,M)
C
      RETURN
C
  200 FORMAT(/,30H BALANCING WEIGHT POWER ...... ,F8.3,
     $19H  FOR INCOMPARABLES ,/,30X,F8.3,19H  FOR   COMPARABLES )
  300 FORMAT(/,23H INITIAL APPROXIMATION ,
     $7(1H.),20H COMPUTED BY PROGRAM)
  500 FORMAT(/,23H INITIAL APPROXIMATION ,
     $7(1H.),18H GIVEN BY THE USER)
  600 FORMAT(///,30H NUMBER OF ITERATIONS ........,I4/
     $         30H TIME OF LAST ITERATION ......,F10.3,9H  SECONDS/
     $       /,50H PROPORTION OF PROFILE-PAIRS CORRECTLY REPRESENTED/
     $         30H CORREP COEFFICIENT ..........,F7.4/
     $       /,37H SCORE--DISTANCE WEIGHTED COEFFICIENT/
     $         30H SCODIS COEFFICIENT ..........,F7.4)
  700 FORMAT (/' Using intermediate optimum.'/)
C
      END

      SUBROUTINE PLOTS

INCLUDE 'MPARMLIN'

      PARAMETER (NWORDS=10)
      PARAMETER (MAXEXMAP=30)

C     COMMON X(1)

INCLUDE 'MCOMNBLK'

      COMMON/IO/NTAPE,NREAD,NWRITE,NSCR
      COMMON/AA/NV,NCAS,NXT,MAP,M
      COMMON/CC/ISMN,ISMX,IEND
C      COMMON/DIM/M,N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N11,N12
      COMMON/VARINT/INTERN
      COMMON/MAPLAB/LABMAP(NWORDS,MAXEXMAP)
      INTEGER*4 LABMAP
      COMMON/FF/FORMFEED
      COMMON/PARAM/IEXDIAGRM, ITMDGPLT, IWRTFLS
      COMMON/LAB/LABEL (MNV),PATH
      COMMON/NPG/NEWPAGE, PATHLEN
C
      CHARACTER*40 LABEL
      CHARACTER*80 PATH
      INTEGER*2 NEWPAGE, PATHLEN
C
      INTEGER*2 NV,NCAS,NXT,MAP,M,ISMN,ISMX,IEND,MP
      CHARACTER*1 FORMFEED
C
      INTEGER*2 NPART, I, IDMIN, IDMAX, I0 
C
C **********************************************************************
C
C  ASSIGNING THE RIGHT JUMP FOR PLOTTING EXTERNAL TRAIT MAPS-IF REQUESTED
C                  BY USER
C
      IEXTOUT = 14
C
      IF (IEXDIAGRM.EQ.0) THEN
          ASSIGN 50 TO IEXELGND
          ASSIGN 70 TO IEXEPLT
          NEWPAGE = 1
      ELSE
          ASSIGN 60 TO IEXELGND
          ASSIGN 80 TO IEXEPLT
          NEWPAGE = 0
      ENDIF
C
      CALL SEPAR (XN9,IEND)
      NPART=(IEND+99)/100
      DO 10 I=1,NPART
          IDMIN=(I-1)*100+1
          IDMAX=I*100
          IF(IDMAX.GT.IEND) IDMAX=IEND
          WRITE(NWRITE,1000) FORMFEED,IDMIN,IDMAX
          I0 = 0
          CALL PLPOSA(XN9,XN44,XN8,I0,I,NV,IEND)
          CALL PLSCRN(XN9,XN44,XN8,I,NV,IEND)
   10 CONTINUE
      IF (ITMDGPLT .EQ. 0 ) GOTO 25
      DO 20 I=1,INTERN
          WRITE(NWRITE,1010) FORMFEED,I
          CALL PLPOSA(XN9,XN44,XN8,I,I0,NV,IEND)
   20 CONTINUE
  25  CONTINUE
      IF(MAP.EQ.0) GO TO 40
      GOTO IEXELGND
C
 60   CONTINUE
C
C  LEGEND ON CODES USED IN TRAIT DIAGRAMS
      CALL LEGEND
C
 50   CONTINUE
      CALL SRCMAP(XN5,XN44,NV)
C
C        NOTE:  unit IWRTFLS is written to in MUTRET within the loop
C
      IF (IWRTFLS .GT. 0) THEN
          IF (PATHLEN .GT. 0) THEN
               OPEN (IWRTFLS, FILE = PATH(1:PATHLEN)//'MUEXTTRT.PSC')
          ELSE
               OPEN (IWRTFLS, FILE = 'MUEXTTRT.PSC')
          END IF
      END IF
C
      IF (IEXTOUT .GT. 0) THEN
          OPEN (IEXTOUT,FILE='FORT14',ACCESS='SEQUENTIAL',
     $              FORM='UNFORMATTED' )
      END IF
C
      WRITE (IEXTOUT)  MAP, IEND
C
      DO 30 MP=1,MAP
C
          CALL VALMAP(XN5,XN4,XN6,XX1,XN220,
     $              XN230,XN240,XN10,NV,NCAS,NXT,MP)
C
          CALL MUTRET(XN3,XN10,XN9,IEND)
C
          CALL EXTWRT (XN9,XN10,XN3,IEND,IEXTOUT)
C
          GOTO IEXEPLT
C
  80      CONTINUE
          WRITE(NWRITE,1020) FORMFEED,MP,(LABMAP(J,MP),J=1,NWORDS)
C      CALL PLTEXT(X(N 9),X(N8),X(N10),IEND)
          CALL PLTMAP(XN9,XN8,XN10,XN3,IEND,0)
          WRITE(NWRITE,1030) FORMFEED,MP,(LABMAP(J,MP),J=1,NWORDS)
          CALL PLTMAP(XN9,XN8,XN10,XN3,IEND,1)
  70      CONTINUE
   30 CONTINUE
C
      IF (IEXTOUT .GT. 0) CLOSE (IEXTOUT)
      IF (IWRTFLS .GT. 0) CLOSE (IWRTFLS)
C
   40 CONTINUE
C
      RETURN
C
 1000 FORMAT(A1,25X,29HTWO-DIMENSIONAL CONFIGURATION,
     $36H OF THE SCALOGRAM (BASE COORDINATES),//,
     $50X,8HID FROM ,I3,4H TO ,I3)
 1010 FORMAT(A1,45X,23HDIAGRAM OF ITEM NUMBER ,I2,//)
 1020 FORMAT(A1,24X,23HABSOLUTE EXTERNAL TRAIT,
     $16H DIAGRAM NUMBER ,I2,2X,2H: ,10A4,//)
 1030 FORMAT(A1,24X,23HRELATIVE EXTERNAL TRAIT,
     $16H DIAGRAM NUMBER ,I2,2X,2H: ,10A4,//)
C
      END

